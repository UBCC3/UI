DROP TABLE IF EXISTS JOB_TAGS;
DROP TABLE IF EXISTS STRUCTURE_PROPERTIES;
DROP TABLE IF EXISTS STRUCTURES;
DROP TYPE IF EXISTS STRUCTURE_ORIGIN;
DROP TABLE IF EXISTS JOBS;
DROP TYPE IF EXISTS JOB_STATUS;
DROP TABLE IF EXISTS USERS;
CREATE TABLE USERS (
    EMAIL VARCHAR(255) PRIMARY KEY NOT NULL,
    CREATED TIMESTAMP DEFAULT NOW(),
    LASTLOGIN TIMESTAMP DEFAULT NULL,
    ACTIVE BOOLEAN NOT NULL,
    ADMIN BOOLEAN NOT NULL
);
CREATE TYPE JOB_STATUS AS ENUM (
    'SUBMITTED',
    'RUNNING',
    'FAILED',
    'CANCELLED',
    'COMPLETED'
);
CREATE TABLE JOBS (
    ID UUID PRIMARY KEY,
    CREATED TIMESTAMP DEFAULT NOW(),
    USERID VARCHAR(255) NOT NULL,
    JOB_NAME VARCHAR(255) NOT NULL,
    SUBMITTED TIMESTAMP DEFAULT NULL,
    STARTED TIMESTAMP DEFAULT NULL,
    FINISHED TIMESTAMP DEFAULT NULL,
    STATUS JOB_STATUS DEFAULT 'SUBMITTED',
    PARAMETERS JSONB DEFAULT NULL,
    FOREIGN KEY (USERID) REFERENCES USERS(EMAIL)
);
CREATE TABLE JOB_TAGS (
    JOBID UUID NOT NULL,
    TAG_NAME VARCHAR(255) NOT NULL,
    TAG_VALUE VARCHAR(255) NOT NULL,
    PRIMARY KEY(JOBID, TAG_NAME),
    FOREIGN KEY (JOBID) REFERENCES JOBS(ID)
);
CREATE TYPE STRUCTURE_ORIGIN AS ENUM ('UPLOADED', 'CALCULATED');
CREATE TABLE STRUCTURES (
    ID UUID PRIMARY KEY,
    SOURCE STRUCTURE_ORIGIN NOT NULL,
    NAME VARCHAR(255) NOT NULL,
    JOBID UUID DEFAULT NULL,
    CREATED TIMESTAMP DEFAULT NOW(),
    USERID VARCHAR(255) NOT NULL,
    FOREIGN KEY (USERID) REFERENCES USERS(EMAIL),
    FOREIGN KEY (JOBID) REFERENCES JOBS(ID)
);
CREATE TABLE STRUCTURE_PROPERTIES(
    ID SERIAL PRIMARY KEY,
    STRUCTUREID UUID NOT NULL,
    ENERGY_JOBID UUID NOT NULL,
    ENERGY FLOAT DEFAULT NULL,
    MO_JOB_UID UUID DEFAULT NULL,
    VF_FREQ_JOB_UID UUID DEFAULT NULL,
    FOREIGN KEY (STRUCTUREID) REFERENCES STRUCTURES(ID),
    FOREIGN KEY (ENERGY_JOBID) REFERENCES JOBS(ID),
    FOREIGN KEY (MO_JOB_UID) REFERENCES JOBS(ID),
    FOREIGN KEY (VF_FREQ_JOB_UID) REFERENCES JOBS(ID)
);
CREATE TABLE AVAILABLE_CALCULATIONS(
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
);
CREATE TABLE AVAILABLE_THEORY(
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
);
CREATE TABLE AVAILABLE_BASIS_SET(
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) NOT NULL,
);
INSERT INTO AVAILABLE_CALCULATIONS (name)
VALUES(
        'Geometry Optimization',
        'Natural Bond Orbitals',
        'Molecular Energy',
        'Vibrational Frequencies',
        'Molecular Orbitals'
    );